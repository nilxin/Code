<div id="InspectionPeriod">
	<h3>稽查时段统计</h3>
	<!-- 稽查时段统计条件 -->
	<div class="checkTime clearfix">
		<div class="checkTime_box fl">
			<span>
				<input type="text" placeholder="开始时间" name="startTime" id="startTime" class="Wdate startTime" onFocus="WdatePicker({skin:'whyGreen',dateFmt:'yyyy-MM-dd',maxDate:'#F{$dp.$D(\'endTime\')||\'%y-%M-{%d-1}\'}'})">
			</span>
			<span class="timeTo">至</span>
			<span>
				<input type="text" placeholder="结束时间" name="endTime" id="endTime" class="Wdate endTime" onFocus="WdatePicker({skin:'whyGreen',dateFmt:'yyyy-MM-dd',minDate:'#F{$dp.$D(\'startTime\')}',maxDate:'%y-%M'})">
			</span>
		</div>
		<div class="checkTime_btn fl">
			<span class="statistics">统&nbsp;计</span>
		</div>
		<div class="pagingBox">
			<div><a class="prevBtn">上一页</a>当前第<span class="nowPage">10</span>页\共<span class="totalPage">20</span>页<a class="nextBtn">下一页</a></div>
		</div>
	</div>
	<!-- 稽查时段统计表格展示 -->
	<div class="tableBox">
		<div class="table_head clearfix">
			<span class="w50">稽查时间</span>
			<span class="w50">次数</span>
		</div>
		<div id="table_body_box_InspectionPeriod" class="table_body_box">
			<ul class="table_body">
				
			</ul>
		</div>
	</div>
</div>
<div class="echartsContent">
	<span class="hitAmountInfo">统计详情</span>
	<div id="echartsTop10"></div>
</div>
<script rel="script">
    define(function(require){
        var base = require("Base"),
        	defaultPageIndex =1,
        	defaultPageRows=8,
        	_self,
        	totalPage,
        	totalRows; 
        return base.extend({
			onInit : function(options){
				_self = this;
				this.inspectTimeChart = echarts.init(document.getElementById('echartsTop10'));

				this.bulidBarChart();
				this.getBarChart();
				_self.statisticsClick();//统计按钮  点击事件
				_self.clickpagingBtn();//直接展示0-24小时每个小时来进行统计,所以屏蔽掉翻页

				// 绘制数据
				// var	drawData = function(default_pageIndex,default_pageRows){
				// var requestOption = {};
				// 	requestOption.data = {
				// 		"page.index":default_pageIndex,
				// 		"page.rows":default_pageRows
				// 	};
				// requestOption.url = "/greenpassappweb/app/webstatistics/checktime.json";
				// requestOption.success = function(data){
				// 	//循环填充数据
				// 	var _data = data.data;
				// 	if(_data.status != 0){
				// 		var $ul = $(".table_body");
				// 		var dataContent = _data.content;
				// 		// console.log("-------dataContent--------");
				// 		// console.log(dataContent.list);
				// 		// console.log("dataContent.list.length : "+dataContent.list.length);
				// 		// console.log(dataContent.page);
				// 		// console.log(dataContent.total);
				// 		// console.log(dataContent.rows);
				// 		totalRows = dataContent.total;
				// 		if(Math.ceil(totalRows/default_pageRows) <= 0){
				// 			totalPage = 1;
				// 		}else{
				// 			totalPage = Math.ceil(totalRows/default_pageRows);
				// 		}
				// 		$(".totalPage").html(totalPage);
				// 		var data_list = dataContent.list;
				// 		// var node = $("<li class='clearfix'></li>");
				// 		// var cloneNode;
				// 		for(var i=0,len=data_list.length;i<len;i++){
				// 			var node = $("<li class='clearfix'></li>");
				// 			var $hourStr = $("<span class='w50'>"+data_list[i].hourStr+"</span>");
				// 			var $passTimes = $("<span class='w50'>"+data_list[i].passTimes+"</span>");
				// 			node.append($hourStr);
				// 			node.append($passTimes);
				// 			// cloneNode = node.clone(true);
				// 			$(".table_body").append(node);
				// 		}
				// 		// $(".table_body").append(cloneNode);
				// 	}else{
				// 		alert(_data.message);
				// 	}
				// }
				// requestOption.error = function(e){
				// console.log("后台数据接口出错!");
				// }
				// S.request(requestOption);
				// };

				// //初始化的时候设置当前页为第一页,计算获取总页数
				$(".nowPage").html(1);
				$(".totalPage").html(1);
				var default_pageIndex = 1;
				var default_pageRows = 8;
				_self.drawData(default_pageIndex,default_pageRows);


				this.hitAmountInfo();

				$('#table_body_box_InspectionPeriod').mCustomScrollbar({//初始化表格滚动条
					mouseWheelPixels:80,
					scrollButtons:{
						enable:false,
						scrollType:"continuous",
						scrollSpeed:20,
						scrollAmount:40
					},
				 	horizontalScroll:false,
				});

			},
			//统计按钮  点击事件
			statisticsClick : function(){
				$("#container").off('click','.statistics').on('click','.statistics',function(){
					var startTime = $("#startTime").val();
					var endTime = $("#endTime").val();
					$(".table_body").empty();
					if(S.isEmpty(startTime)){
						startTime = null;
					}
					if(S.isEmpty(endTime)){
						endTime = null;
					}
					_self.drawData(1,24,startTime,endTime);
				});
			},

			//翻页时填充数据并绘制DOM
			drawData : function(default_pageIndex,default_pageRows,startTime,endTime){
				var requestOption = {};
				requestOption.data = {
						"page.index":default_pageIndex,
						"page.rows":default_pageRows,
						"startTime":startTime,
						"endTime":endTime
					};
				requestOption.url = "/greenpassappweb/app/webstatistics/checktime.json";
				requestOption.success = function(data){
					//循环填充数据
					var _data = data.data;
					if(_data.status != 0){
						var $ul = $(".table_body");
						var dataContent = _data.content;
						totalRows = dataContent.total;
						if(Math.ceil(totalRows/default_pageRows) <= 0){
							totalPage = 1;
						}else{
							totalPage = Math.ceil(totalRows/default_pageRows);
						}
						console.log(totalPage);
						$(".totalPage").html(totalPage);
						var data_list = dataContent.list;
						// var node = $("<li class='clearfix'></li>");
						// var cloneNode;
						for(var i=0,len=data_list.length;i<len;i++){
							var node = $("<li class='clearfix'></li>");
							var hourStr = _self.convertHourStr(data_list[i].hourStr);
							var $hourStr = $("<span class='w50'>"+hourStr+"</span>");
							var $passTimes = $("<span class='w50'>"+data_list[i].passTimes+"</span>");
							node.append($hourStr);
							node.append($passTimes);
							// cloneNode = node.clone(true);
							$(".table_body").append(node);
						}
						// $(".table_body").append(cloneNode);
					}else{
						alert(_data.message);
					}
				}
				requestOption.error = function(e){
					console.log("后台数据接口出错!");
				}
				S.request(requestOption);
			},

			//拼接处理小时字符串
			convertHourStr : function(hourStr){
				var result = '';
				if(!S.isEmpty(hourStr)){
					if(parseInt(hourStr)<10){
						result = hourStr+":00" +" -- "+ hourStr+":59";
					}else{
						result = hourStr+":00" +" -- "+ hourStr+":59";
					}
				}
				return result;
			},

			//上一页 下一页
			clickpagingBtn : function(){
				$("#container").off('click','.prevBtn').on('click','.prevBtn',function(){
					var nowPageNum = parseInt($(".nowPage").html(), 10);
					if (nowPageNum <= 1){
						$.zAlert("已经是第一页");
						return;
					}
					$(".nowPage").html(--nowPageNum);
					//数据填充   清空DOM 重新绘制
					$(".table_body").empty();
					_self.drawData(nowPageNum,defaultPageRows);
				});
				$("#container").off('click','.nextBtn').on('click','.nextBtn',function(){
					var nowPageNum = parseInt($(".nowPage").html(), 10);
					var totalNum = parseInt($(".totalPage").html(), 10);
					if (nowPageNum >= totalNum){
						$.zAlert("已经是最后一页");
						return;
					}
					$(".nowPage").html(++nowPageNum);
					//数据填充   清空DOM 重新绘制
					$(".table_body").empty();
					_self.drawData(nowPageNum,defaultPageRows);
				});
			},
			//关闭图表 查看打击金额统计的表格
			hitAmountInfo : function(){
				$(".hitAmountInfo").off('click').on('click',function(){
					$("#echartsTop10").html("").parent().hide(600);
					// $(".nowPage").html(1);
					// $(".totalPage").html(1);
					// var url = "/greenpassappweb/app/webstatistics/strikecash.json",
					//     pageId = 1;
					// _self.drawData(1,8);
				});
			}, 
			// 构建echart图表
			bulidBarChart: function(){
				var self=this;

				var option = {
				    title: {
				        text: '日平均鲜活绿通车通行分布',
				        subtext: '双流南'
				    },
				    tooltip: {
				        trigger: 'axis',
				        axisPointer: {
				            type: 'cross'
				        }
				    },
				    toolbox: {
				        show: true,
				        feature: {
				            saveAsImage: {}
				        }
				    },
				    xAxis:  {
				        type: 'category',
				        boundaryGap: false,
				        data: ['00:00', '01:00', '02:00', '03:00', '04:00', '05:00', '06:00', '07:00', '08:00', '09:00', '10:00', '11:00', '12:00', '13:00', '14:00', '15:00', '16:00', '17:00', '18:00', '19:00','20:00','21:00','22:00','23:00','23:59'],
				        // min:"00:00",
				        // max:"23:59",
				        axisLabel: {  
				           interval: 0,  
				           rotate: "-30"
						},				   
				    },
				    yAxis: {
				        type: 'value',
				        // name:'辆',
				        min:0,
				        max:100,
				        axisLabel: {
				            formatter: '{value} 辆'
				        },
				        axisPointer: {
				            snap: true
				        }
				    },
				    visualMap: {
				        show: false,
				        dimension: 0,
				        pieces: [{
				            lte: 6,
				            color: 'green'
				        }, {
				            gt: 6,
				            lte: 8,
				            color: 'red'
				        }, {
				            gt: 8,
				            lte: 14,
				            color: 'green'
				        }, {
				            gt: 14,
				            lte: 17,
				            color: 'red'
				        }, {
				            gt: 17,
				            color: 'green'
				        }]
				    },
				    series: [
				        {
				            name:'通行量',
				            type:'line',
				            smooth: true,
				            data: [],
				            markArea: {
				                data: [ [{
				                    name: '上午高峰点',
				                    xAxis: ''
				                }, {
				                    xAxis: ''
				                }], [{
				                    name: '下午高峰点',
				                    xAxis: ''
				                }, {
				                    xAxis: ''
				                }] ]
				            }
				        }
				    ]
				};

				self.inspectTimeChart.setOption(option);
			},
			// 获取echart图表
			getBarChart: function(){
				var self=this;
				S.request({
					url: "/greenpassappweb/app/webstatistics/checktime.json",
					data:{
						"page.index":1,
						"page.rows":24,
					},
					success:function(data){
						// 获取返回数据
						
						if(data.data.status!=0){
							var data_list=data.data.content.list;
							var dataTimes=[]
							var morningPeak=data_list[0].passTimes;
							var afternoonPeak=data_list[(data_list.length/2)].passTimes;

							for(var i=0;i<data_list.length;i++){
								dataTimes.push(data_list[i].passTimes);
								if(i<data_list.length/2){
									// 找出前半段最大
									if(data_list[i].passTimes>morningPeak){
										morningPeak=data_list[i].passTimes;
									}
								}else{
									// 找出后半段最大值
									if(data_list[i].passTimes>afternoonPeak){
										afternoonPeak=data_list[i].passTimes;
									}
								}
							}

							// console.log(morningPeak+"<br>"+"----"+afternoonPeak);

							var index1=dataTimes.indexOf(morningPeak);
							var index2=dataTimes.indexOf(afternoonPeak);
							var timeArr=['00:00', '01:00', '02:00', '03:00', '04:00', '05:00', '06:00', '07:00', '08:00', '09:00', '10:00', '11:00', '12:00', '13:00', '14:00', '15:00', '16:00', '17:00', '18:00', '19:00','20:00','21:00','22:00','23:00','23:59'];
							morningPeak=timeArr[index1];
							afternoonPeak=timeArr[index2];

							// console.log(morningPeak+"<br>"+"----"+afternoonPeak);

							var visualMap={
						        pieces: [{
						            lte: index1-1,
						            color: 'green'
						        }, {
						            gt: index1-1,
						            lte: index1+1,
						            color: 'red'
						        }, {
						            gt: index1+1,
						            lte: index2-1,
						            color: 'green'
						        }, {
						            gt: index2-1,
						            lte: index2+1,
						            color: 'red'
						        }, {
						            gt: index2+1,
						            color: 'green'
						        }]
							}
							var series={
								data:dataTimes,
								markArea: {
					                data: [ [{
					                    name: '上午高峰点',
					                    xAxis: timeArr[index1-1]
					                }, {
					                    xAxis: timeArr[index1+1]
					                }], [{
					                    name: '下午高峰点',
					                    xAxis: timeArr[index2-1]
					                }, {
					                    xAxis: timeArr[index2+1]
					                }] ]
					            }
							}

							self.inspectTimeChart.setOption({
								visualMap:visualMap,
								series:series
							})

						}
						
					}
				})
			}
		})
	})
</script>